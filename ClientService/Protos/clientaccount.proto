syntax = "proto3";

option csharp_namespace = "ClientService";

package ClientService;

service ClientAccount {
    rpc RegisterClient(RegisterClientRequest) returns (RegisterClientResponse);
    rpc AuthenticateClient(AuthenticateClientRequest) returns (AuthenticateClientResponse);
    rpc GetClientInfo(GetClientInfoRequest) returns (GetClientInfoResponse);
    rpc AddFriend(AddFriendRequest) returns (AddFriendResponse);
    rpc ListFriend(ListFriendRequest) returns (ListFriendResponse);
    rpc DeleteFriend(DeleteFriendRequest) returns (DeleteFriendResponse);
    rpc DeleteClient(DeleteClientRequest) returns (DeleteClientResponse);
}

message ClientMessage {
    string id = 1;
    string email = 2;
    string userName = 3;
    string password = 4;
    repeated string chatIds = 5;
    repeated string friendsIds = 6;
}
message ListFriendRequest{
    string clientId = 1;
}

message ListFriendResponse{
    bool IsSuccess = 1;
    string ErrorMessage = 2;
    repeated ClientMessage friends = 3;
}

message DeleteClientRequest {
    string clientId = 1;
}

message DeleteClientResponse {
    bool isSuccess = 1;
    string errorMessage = 2;
}

message DeleteFriendRequest{
    string clientId = 1;
    string friendId = 2;
}
message DeleteFriendResponse{
    bool isSuccess = 1;
    string ErrorMessage = 2;
}

message RegisterClientRequest {
    string email = 1;
    string userName = 2;
    string password = 3;
}

message RegisterClientResponse {
    bool isSuccess = 1;
    string errorMessage = 2;
}

message AuthenticateClientRequest {
  string identifier = 1; 
  string password = 2;
}

message AuthenticateClientResponse {
    bool isSuccess = 1;
    string token = 2;
    string errorMessage = 3;
}

message GetClientInfoRequest {
    string id = 1;
}

message GetClientInfoResponse {
    ClientMessage client = 1;
}

message AddFriendRequest {
    string userId = 1;
    string friendId = 2;
}

message AddFriendResponse {
    bool isSuccess = 1;
    string errorMessage = 2;
}
